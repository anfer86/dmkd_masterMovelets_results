)
}
)
)
results.bituler.byClass.agg <- results.bituler.byClass[, .(
f1_scores.mean = mean(f1_score),
precision.mean = mean(precision),
recall.mean = mean(recall) ),
by=.(class,classifier)]
results.bituler.byClass.agg
dt <- rbind( results.sim.acc, results.masterMovelets.acc )[,.(method, fold, acc1)]
dt
dt <- rbind( results.sim.acc, results.masterMovelets.acc )[,.(method, fold, acc1)]
summary( aov( acc1 ~ method, data=dt) )
dt.wide <- reshape(dt, idvar = c("fold"), timevar = "method", direction = "wide")
dt.wide$fold <- NULL
colnames(dt.wide) <- gsub( "acc1.", "", colnames(dt.wide) )
tukey.test <- tukeyPost(dt.wide, control = ncol(dt.wide) )
print('Tukey Post-Test')
print(tukey.test)
dt <- rbind( results.sim.acc, results.movelets.acc, results.masterMovelets.acc )[,.(method, fold, acc1)]
summary( aov( acc1 ~ method, data=dt) )
dt.wide <- reshape(dt, idvar = c("fold"), timevar = "method", direction = "wide")
dt.wide$fold <- NULL
colnames(dt.wide) <- gsub( "acc1.", "", colnames(dt.wide) )
tukey.test <- tukeyPost(dt.wide, control = ncol(dt.wide) )
print('Tukey Post-Test')
print(tukey.test)
dt.agg <- rbind( results.sim.acc.agg, results.bituler.acc.agg, results.movelets.acc.agg, results.masterMovelets.acc.agg )
dt.agg.str <- dt.agg[,.(method,
acc1 = paste0(formatC(round(acc1.mean,1), mode = 'character', format = "fg"),
' (',
formatC(round(acc1.sd,1)  , mode = 'character', format = "fg"),
')'),
acc5 = paste0(formatC(round(acc5.mean,1), mode = 'character', format = "fg"),
' (',
formatC(round(acc5.sd,1)  , mode = 'character', format = "fg"),
')')
),]
print(dt.agg.str)
results.bituler.acc <- rbindlist(
lapply( 1:nfolds,
function(irun){
pathdir_irun <- paste0(pathdir, "run", irun, "/Bituler/model/")
rbindlist(lapply(models, function(x){
pathdir_irun_model <- paste0( pathdir_irun, 'model_', x, '_history.csv' )
content <- tail( fread(pathdir_irun_model, header = T), 1 )
data.frame(
method = paste0('Bituler_',x),
acc1   = round( as.numeric(content[,3]) * 100, 1),
acc5   = round( as.numeric(content[,4]) * 100, 1),
fold   = irun
)
})
)
}
)
)
source('D:/Users/andres/git_projects/dmkd_results_cv/scripts/gowalla_model_evaluation.R')
source('D:/Users/andres/git_projects/dmkd_results_cv/scripts/foursquare_model_evaluation.R')
source('D:/Users/andres/git_projects/dmkd_results_cv/scripts/foursquare_model_evaluation.R')
source('D:/Users/andres/git_projects/dmkd_results_cv/scripts/brighkite_model_evaluation.R')
source('D:/Users/andres/git_projects/dmkd_results_cv/scripts/gowalla_model_evaluation.R')
source('D:/Users/andres/git_projects/dmkd_results_cv/scripts/foursquare_model_evaluation.R')
dt.agg
dt.agg.str
?fwrite(dt.agg.str)
?fwrite(dt.agg.str, 'summary.csv')
fwrite(dt.agg.str, 'summary.csv')
pathdir
source('D:/Users/andres/git_projects/dmkd_results_cv/scripts/foursquare_model_evaluation.R')
source('D:/Users/andres/git_projects/dmkd_results_cv/scripts/gowalla_model_evaluation.R')
source('D:/Users/andres/git_projects/dmkd_results_cv/scripts/brighkite_model_evaluation.R')
source('D:/Users/andres/git_projects/dmkd_results_cv/scripts/foursquare_model_evaluation.R')
source('D:/Users/andres/git_projects/dmkd_results_cv/scripts/foursquare_model_evaluation.R')
results.bituler.byClass.agg
source('D:/Users/andres/git_projects/dmkd_results_cv/scripts/foursquare_model_evaluation.R')
results.bituler.byClass.agg
results.masterMovelets.byClass
results.masterMovelets.byClass.agg
getwd()
source('D:/Users/andres/git_projects/dmkd_results_cv/scripts/foursquare_model_evaluation.R')
dt2
dt2
# -------------------------------------------------------------------------------------
# -------------------------------------------------------------------------------------
# ---------------- PLOTS --------------------------------------------------------------
# -------------------------------------------------------------------------------------
# -------------------------------------------------------------------------------------
# -------------------------------------------------------------------------------------
results.byClass.agg <- rbind(
results.masterMovelets.byClass.agg)[,.(class,classifier,f1_score)]
results.masterMovelets.byClass.agg
# -------------------------------------------------------------------------------------
# -------------------------------------------------------------------------------------
# ---------------- PLOTS --------------------------------------------------------------
# -------------------------------------------------------------------------------------
# -------------------------------------------------------------------------------------
# -------------------------------------------------------------------------------------
results.byClass.agg <- rbind(
results.masterMovelets.byClass.agg)[,.(class,classifier,f1_score.mean)]
results.masterMovelets.byClass.agg)[,.(class,classifier,f1_scores.mean)]
# -------------------------------------------------------------------------------------
# -------------------------------------------------------------------------------------
# ---------------- PLOTS --------------------------------------------------------------
# -------------------------------------------------------------------------------------
# -------------------------------------------------------------------------------------
# -------------------------------------------------------------------------------------
results.byClass.agg <- rbind(
results.masterMovelets.byClass.agg)[,.(class,classifier,f1_scores.mean)]
results.byClass.agg
# -------------------------------------------------------------------------------------
# -------------------------------------------------------------------------------------
# ---------------- PLOTS --------------------------------------------------------------
# -------------------------------------------------------------------------------------
# -------------------------------------------------------------------------------------
# -------------------------------------------------------------------------------------
results.byClass.agg <- rbind(
results.sim.byClass.agg,
results.bituler.byClass.agg,
results.movelets.byClass.agg,
results.masterMovelets.byClass.agg)[,.(class,classifier,f1_scores.mean)]
results.bituler.byClass
results.byClass.agg
# -------------------------------------------------------------------------------------
# -------------------------------------------------------------------------------------
# ---------------- PLOTS --------------------------------------------------------------
# -------------------------------------------------------------------------------------
# -------------------------------------------------------------------------------------
# -------------------------------------------------------------------------------------
dt2 <- results.byClass.agg <- rbind(
results.sim.byClass.agg,
results.bituler.byClass.agg,
results.movelets.byClass.agg,
results.masterMovelets.byClass.agg)[,.(class,classifier,f1_score=f1_scores.mean)]
dt2$f1_score <- round(dt2$f1_score,2)
dt2$classifier <- gsub(pattern = "edr", "EDR", dt2$classifier)
dt2$classifier <- gsub(pattern = "lcss", "LCSS", dt2$classifier)
dt2$classifier <- gsub(pattern = "msm", "MSM", dt2$classifier)
dt2$classifier <- gsub(pattern = "mddtw", "MD-DTW", dt2$classifier)
dt2$classifier <- gsub(pattern = "dtwa", "DTWa", dt2$classifier)
dt2$classifier <- gsub(pattern = "Approach2_Step5", "BiTULER", dt2$classifier)
selected.models <- c("MD-DTW","LCSS","EDR","MSM","BiTULER", "Movelets\nRF","MasterMovelets\nNN", "MasterMovelets\nRF")
dt2 <- dt2[classifier %in% selected.models,]
dt
# -------------------------------------------------------------------------------------
# -------------------------------------------------------------------------------------
# ---------------- PLOTS --------------------------------------------------------------
# -------------------------------------------------------------------------------------
# -------------------------------------------------------------------------------------
# -------------------------------------------------------------------------------------
dt2 <- results.byClass.agg <- rbind(
results.sim.byClass.agg,
results.bituler.byClass.agg,
results.movelets.byClass.agg,
results.masterMovelets.byClass.agg)[,.(class,classifier=method,f1_score=f1_scores.mean)]
dt2$f1_score <- round(dt2$f1_score,2)
dt2
# -------------------------------------------------------------------------------------
# -------------------------------------------------------------------------------------
# ---------------- PLOTS --------------------------------------------------------------
# -------------------------------------------------------------------------------------
# -------------------------------------------------------------------------------------
# -------------------------------------------------------------------------------------
dt2 <- results.byClass.agg <- rbind(
results.sim.byClass.agg,
results.bituler.byClass.agg,
results.movelets.byClass.agg,
results.masterMovelets.byClass.agg)[,.(class,classifier,f1_score=f1_scores.mean)]
dt2$f1_score <- round(dt2$f1_score,2)
dt2$classifier <- gsub(pattern = "edr", "EDR", dt2$classifier)
dt2$classifier <- gsub(pattern = "lcss", "LCSS", dt2$classifier)
dt2$classifier <- gsub(pattern = "msm", "MSM", dt2$classifier)
dt2$classifier <- gsub(pattern = "mddtw", "MD-DTW", dt2$classifier)
dt2$classifier <- gsub(pattern = "dtwa", "DTWa", dt2$classifier)
dt2$classifier <- gsub(pattern = "Approach2_Step5", "BiTULER", dt2$classifier)
dt2
labels(dt2$classifier)
as?Factor(dt2$classifier)
?as.factor
levels(dt2$classifier)
levels(as.factor(dt2$classifier))
results.masterMovelets.byClass
results.masterMovelets.byClass
results.masterMovelets.byClass <- rbindlist(
lapply( 1:nfolds,
function(irun){
pathdir_irun <- paste0(pathdir, "run", irun, "/MasterMovelets/foursquare_ED/mnf_-1__q_LSP__ms_1__Ms_10/model/")
browser()
data.frame (
rbindlist(lapply(models, function(x){ get.f1.model.byClass(x,pathdir_irun)} )),
fold = irun
)
}
)
)
lapply(models, function(x){ get.f1.model.byClass(x,pathdir_irun)} )
data.frame (
rbindlist(lapply(models, function(x){ get.f1.model.byClass(x,pathdir_irun)} )),
fold = irun
)
results.masterMovelets.byClass <- rbindlist(
lapply( 1:nfolds,
function(irun){
pathdir_irun <- paste0(pathdir, "run", irun, "/MasterMovelets/foursquare_ED/mnf_-1__q_LSP__ms_1__Ms_10/model/")
browser()
data.frame (
rbindlist(lapply(models, function(x){ get.f1.model.byClass(x,pathdir_irun)} )),
fold = irun
)
}
)
)
pathdir_irun
data.frame (
rbindlist(lapply(models, function(x){ get.f1.model.byClass(x,pathdir_irun)} )),
fold = irun
)
source('D:/Users/andres/git_projects/dmkd_results_cv/scripts/foursquare_model_evaluation.R')
source('D:/Users/andres/git_projects/dmkd_results_cv/scripts/foursquare_model_evaluation.R')
data.frame (
rbindlist(lapply(models, function(x){ get.f1.model.byClass(x,pathdir_irun)} )),
fold = irun
)
rbindlist(lapply(models, function(x){ get.f1.model.byClass(x,pathdir_irun)} ))
models
rbindlist(lapply(models, function(x){ get.f1.model.byClass(x,pathdir_irun)}[,.(classifier='x')] ))
rbindlist(lapply(models, function(x){ get.f1.model.byClass(x,pathdir_irun)}[,.(classifier:'x')] ))
rbindlist(lapply(models, function(x){ get.f1.model.byClass(x,pathdir_irun)}[,classifier=1,] ))
rbindlist(lapply(models, function(x){ get.f1.model.byClass(x,pathdir_irun)}[,classifier:=1,] ))
rbindlist(lapply(models, function(x){ get.f1.model.byClass(x,pathdir_irun)}[,classifier:=1,] ))
rbindlist(lapply(models, function(x){ get.f1.model.byClass(x,pathdir_irun)}[,classifier := paste0('MasterMovelets_',x) ,] ))
results.masterMovelets.byClass <- rbindlist(
lapply( 1:nfolds,
function(irun){
pathdir_irun <- paste0(pathdir, "run", irun, "/MasterMovelets/foursquare_ED/mnf_-1__q_LSP__ms_1__Ms_10/model/")
browser()
data.frame (
rbindlist(lapply(models, function(x){
get.f1.model.byClass(x,pathdir_irun)[,classifier := paste0('MasterMovelets_',x) ,]
})),
fold = irun
)
}
)
)
results.masterMovelets.byClass <- rbindlist(
lapply( 1:nfolds,
function(irun){
pathdir_irun <- paste0(pathdir, "run", irun, "/MasterMovelets/foursquare_ED/mnf_-1__q_LSP__ms_1__Ms_10/model/")
data.frame (
rbindlist(lapply(models, function(x){
get.f1.model.byClass(x,pathdir_irun)[,classifier := paste0('MasterMovelets_',x) ,]
})),
fold = irun
)
}
)
)
results.masterMovelets.byClass
source('D:/Users/andres/git_projects/dmkd_results_cv/scripts/foursquare_model_evaluation.R')
dt
dt2$classifier <- gsub(pattern = "edr", "EDR", dt2$classifier)
dt2$classifier <- gsub(pattern = "lcss", "LCSS", dt2$classifier)
dt2$classifier <- gsub(pattern = "msm", "MSM", dt2$classifier)
dt2$classifier <- gsub(pattern = "mddtw", "MD-DTW", dt2$classifier)
dt2$classifier <- gsub(pattern = "dtwa", "DTWa", dt2$classifier)
dt2$classifier <- gsub(pattern = "Bituler_bidirecctionalRNN2", "BiTULER", dt2$classifier)
dt2$classifier <- gsub(pattern = "Movelets_approachRF300", "Movelets\nRF", dt2$classifier)
dt2$classifier <- gsub(pattern = "MasterMovelets_approach2", "MasterMovelets\nNN", dt2$classifier)
dt2$classifier <- gsub(pattern = "MasterMovelets_approachRF300", "MasterMovelets\nRF", dt2$classifier)
dt2
# ----------------------------------------------------------------------
# RANKING ANALYSIS
dt2.wide <- reshape(dt2[,.(class,classifier,f1_score)], idvar = c("class"), timevar = "classifier", direction = "wide")
colnames(dt2.wide) <- gsub(pattern = "f1_score.", "", colnames(dt2.wide) )
dt2.wide
as.factor(dt2$classifier)
# -------------------------------------------------------------------------------------
# -------------------------------------------------------------------------------------
# ---------------- PLOTS --------------------------------------------------------------
# -------------------------------------------------------------------------------------
# -------------------------------------------------------------------------------------
# -------------------------------------------------------------------------------------
dt2 <- results.byClass.agg <- rbind(
results.sim.byClass.agg,
results.bituler.byClass.agg,
results.movelets.byClass.agg,
results.masterMovelets.byClass.agg)[,.(class,classifier,f1_score=f1_scores.mean)]
dt2$f1_score <- round(dt2$f1_score,2)
as.factor(dt2$classifier)
dt2$f1_score <- round(dt2$f1_score,2)
dt2$classifier <- gsub(pattern = "edr", "EDR", dt2$classifier)
dt2$classifier <- gsub(pattern = "lcss", "LCSS", dt2$classifier)
dt2$classifier <- gsub(pattern = "msm", "MSM", dt2$classifier)
dt2$classifier <- gsub(pattern = "mddtw", "MD-DTW", dt2$classifier)
dt2$classifier <- gsub(pattern = "dtwa", "DTWa", dt2$classifier)
dt2$classifier <- gsub(pattern = "Bituler_bidirecctionalRNN2", "BiTULER", dt2$classifier)
dt2$classifier <- gsub(pattern = "Movelets_approachRF300", "Movelets\nRF", dt2$classifier)
dt2$classifier <- gsub(pattern = "MasterMovelets_approach2", "MasterMovelets\nNN", dt2$classifier)
dt2$classifier <- gsub(pattern = "MasterMovelets_approachRF300", "MasterMovelets\nRF", dt2$classifier)
selected.models <- c("MD-DTW","LCSS","EDR","MSM","BiTULER", "Movelets\nRF","MasterMovelets\nNN", "MasterMovelets\nRF")
dt2 <- dt2[classifier %in% selected.models,]
dt2
)as.factor(dt2
as.factor(dt2)
as.factor(dt2$classifier)
selected.models <- c("MD-DTW","LCSS","EDR","MSM","BiTULER", "Movelets\nRF","MasterMovelets\nNN", "MasterMovelets\nRF")
dt2 <- dt2[classifier %in% selected.models,]
dt2
as.factor(dt2$classifier)
# ----------------------------------------------------------------------
# RANKING ANALYSIS
dt2.wide <- reshape(dt2[,.(class,classifier,f1_score)], idvar = c("class"), timevar = "classifier", direction = "wide")
colnames(dt2.wide) <- gsub(pattern = "f1_score.", "", colnames(dt2.wide) )
dt.test <- dt2.wide[,-c("class")]
dt.test[is.na(dt.test)] <- 0
ranked.results <- data.table(t(apply(1-dt.test, 1, rank)))
dt3 <- rbindlist(lapply(1:nrow(ranked.results), function(ix){
x <- ranked.results[ix,]
x1 <- dt.test[ix,]
best.classifiers <- (x == 0) # Para retornar falso
if (min(x) > max(x)){
best.classifiers <- (x == min(x))
}
data.table(best.classifiers)
}))
dt2.woide
dt2.wide
# ----------------------------------------------------------------------
# RANKING ANALYSIS
dt2.wide <- reshape(dt2[,.(class,classifier,f1_score)], idvar = c("class"), timevar = "classifier", direction = "wide")
colnames(dt2.wide) <- gsub(pattern = "f1_score.", "", colnames(dt2.wide) )
dt.test <- dt2.wide[,-c("class")]
dt.test[is.na(dt.test)] <- 0
ranked.results <- data.table(t(apply(1-dt.test, 1, rank)))
dt3 <- rbindlist(lapply(1:nrow(ranked.results), function(ix){
x <- ranked.results[ix,]
x1 <- dt.test[ix,]
best.classifiers <- (x == 0) # Para retornar falso
if (min(x) > max(x)){
best.classifiers <- (x == min(x))
}
data.table(best.classifiers)
}))
final.result <- table(melt(dt3))
print(final.result)
dt.final.result <- data.table(final.result)[value == T]
dt3
ranked.results
dt.test
ranked.results
dt3 <- rbindlist(lapply(1:nrow(ranked.results), function(ix){
x <- ranked.results[ix,]
x1 <- dt.test[ix,]
best.classifiers <- (x == 0) # Para retornar falso
if (min(x) > max(x)){
best.classifiers <- (x == min(x))
}
data.table(best.classifiers)
}))
dt3
dt3 <- rbindlist(lapply(1:nrow(ranked.results), function(ix){
borwser()
x <- ranked.results[ix,]
x1 <- dt.test[ix,]
best.classifiers <- (x == 0) # Para retornar falso
if (min(x) > max(x)){
best.classifiers <- (x == min(x))
}
data.table(best.classifiers)
}))
dt3 <- rbindlist(lapply(1:nrow(ranked.results), function(ix){
browser()
x <- ranked.results[ix,]
x1 <- dt.test[ix,]
best.classifiers <- (x == 0) # Para retornar falso
if (min(x) > max(x)){
best.classifiers <- (x == min(x))
}
data.table(best.classifiers)
}))
ix
x <- ranked.results[ix,]
x1 <- dt.test[ix,]
x
x1
best.classifiers <- (x == 0) # Para retornar falso
best.classifiers
x
if (min(x) > max(x)){
best.classifiers <- (x == min(x))
}
best.classifiers
min(x) > max(x)
x
min(x) < max(x)
dt3 <- rbindlist(lapply(1:nrow(ranked.results), function(ix){
browser()
x <- ranked.results[ix,]
x1 <- dt.test[ix,]
best.classifiers <- (x == 0) # Para retornar falso
if (min(x) < max(x)){
best.classifiers <- (x == min(x))
}
data.table(best.classifiers)
}))
dt3 <- rbindlist(lapply(1:nrow(ranked.results), function(ix){
x <- ranked.results[ix,]
x1 <- dt.test[ix,]
best.classifiers <- (x == 0) # Para retornar falso
if (min(x) < max(x)){
best.classifiers <- (x == min(x))
}
data.table(best.classifiers)
}))
dt3
final.result <- table(melt(dt3))
print(final.result)
dt.final.result <- data.table(final.result)[value == T]
dt.final.result$variable <- gsub(pattern = "f1_score.","",x = dt.final.result$variable)
dt.final.result$variable <- gsub(pattern = "f1_score.","",x = dt.final.result$variable)
ggplot( data = dt.final.result, aes( x = variable, y= N)) + geom_col() +
theme_bw() + ylab("Number of best F-measure classes") + xlab("Classification methods")  +
scale_x_discrete(limits = selected.models) +
geom_text(aes(label = N, y = N + 2),position = position_dodge(0.9),vjust = 0, size = 3.5) +
theme( axis.text.x = element_text(angle = 90, hjust = 1) )
ggsave("kbsBestClassesFoursquare.pdf", width = 5, height = 4)
models = c("approach2","approachRF300")
results.masterMovelets.acc <- rbindlist(
lapply( 1:nfolds,
function(irun){
pathdir_irun <- paste0(pathdir, "run", irun, "/MasterMovelets/foursquare_ED/mnf_-1__q_LSP__ms_1__Ms_10/model/")
rbindlist(lapply(models, function(x){
pathdir_irun_model <- paste0( pathdir_irun, 'model_', x, '_history.csv' )
content <- tail( fread(pathdir_irun_model, header = T) )
data.frame(
method = paste0('MasterMovelets_',x),
acc1   = round( as.numeric(content[,3]) * 100, 1),
acc5   = round( as.numeric(content[,4]) * 100, 1),
fold   = irun
)
})
)
}
)
)
results.masterMovelets.acc <- rbindlist(
lapply( 1:nfolds,
function(irun){
pathdir_irun <- paste0(pathdir, "run", irun, "/MasterMovelets/foursquare_ED/mnf_-1__q_LSP__ms_1__Ms_10/model/")
rbindlist(lapply(models, function(x){
pathdir_irun_model <- paste0( pathdir_irun, 'model_', x, '_history.csv' )
content <- tail( fread(pathdir_irun_model, header = T) )
browser()
data.frame(
method = paste0('MasterMovelets_',x),
acc1   = round( as.numeric(content[,3]) * 100, 1),
acc5   = round( as.numeric(content[,4]) * 100, 1),
fold   = irun
)
})
)
}
)
)
content
results.masterMovelets.acc <- rbindlist(
lapply( 1:nfolds,
function(irun){
pathdir_irun <- paste0(pathdir, "run", irun, "/MasterMovelets/foursquare_ED/mnf_-1__q_LSP__ms_1__Ms_10/model/")
rbindlist(lapply(models, function(x){
pathdir_irun_model <- paste0( pathdir_irun, 'model_', x, '_history.csv' )
content <- tail( fread(pathdir_irun_model, header = T), 1 )
browser()
data.frame(
method = paste0('MasterMovelets_',x),
acc1   = round( as.numeric(content[,3]) * 100, 1),
acc5   = round( as.numeric(content[,4]) * 100, 1),
fold   = irun
)
})
)
}
)
)
results.masterMovelets.acc <- rbindlist(
lapply( 1:nfolds,
function(irun){
pathdir_irun <- paste0(pathdir, "run", irun, "/MasterMovelets/foursquare_ED/mnf_-1__q_LSP__ms_1__Ms_10/model/")
rbindlist(lapply(models, function(x){
pathdir_irun_model <- paste0( pathdir_irun, 'model_', x, '_history.csv' )
content <- tail( fread(pathdir_irun_model, header = T), 1 )
data.frame(
method = paste0('MasterMovelets_',x),
acc1   = round( as.numeric(content[,3]) * 100, 1),
acc5   = round( as.numeric(content[,4]) * 100, 1),
fold   = irun
)
})
)
}
)
)
results.masterMovelets.acc
source('D:/Users/andres/git_projects/dmkd_results_cv/scripts/foursquare_model_evaluation.R')
ggplot( data = dt.final.result, aes( x = variable, y= N)) + geom_col() +
theme_bw() + ylab("Number of best F-measure classes") + xlab("Classification methods")  +
scale_x_discrete(limits = selected.models) +
geom_text(aes(label = N, y = N + 2),position = position_dodge(0.9),vjust = 0, size = 3.5) +
theme( axis.text.x = element_text(angle = 90, hjust = 1) )
ggsave("kbsBestClassesFoursquare.pdf", width = 5, height = 4)
